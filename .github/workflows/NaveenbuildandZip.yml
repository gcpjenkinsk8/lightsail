name: NaveenbuildandZip

on:
  workflow_dispatch:
    inputs:
      TicketNumber:
        description: 'Jira Ticket'
        required: true

env:
  SOURCE_FOLDER: "C:/DeploymentFiles/VersionFolder"
  DESTINATION_FOLDER: "C:/DeploymentFiles/ReleaseFolder"
  TicketNumber: '${{ github.event.inputs.Ticketnumber }}'

jobs:
  build-publish:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./Main-build
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      working-directory: ${{ github.workspace }}/Main-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # ...

      - name: Set artifact name
        id: set-artifact-name
        run: |
          $ticket_number = $env:INPUT_TicketNumber
          $current_time = Get-Date -Format "HHmmss"
          $artifact_name = "Build-${ticket_number}-$(Get-Date -Format 'yyyyMMdd')-${current_time}"
          Write-Host "Artifact name: $artifact_name"
          echo "ArtifactName=$artifact_name" >> $GITHUB_ENV
        shell: pwsh
        env:
          INPUT_TicketNumber: ${{ github.event.inputs.TicketNumber }}

      - name: Publish artifact
        id: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.set-artifact-name.outputs.ArtifactName }}
          path: Main-build/_build

      # ...

  Copy-file-git-lightsail:
    name: Copy File
    needs: build-publish
    if: success()
    runs-on: ubuntu-latest
    env:
      SERVER_PASS: ${{ secrets.REMOTE_PASSWORDGC }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      # ...

      - name: Download the Artifact in the abc folder
        id: downloaded-artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-publish.outputs.upload-artifact }}
          path: ./abc

      - name: Set artifact name from file
        run: |
          $artifact_name = Get-Content -Path "${{ github.workspace }}/artifact_name.txt"
          echo "ArtifactName=$artifact_name" >> $GITHUB_ENV
        shell: pwsh

      - name: Zip Artifact
        run: zip -r ${{ steps.downloaded-artifact.outputs.artifact-name }}.zip abc/*
