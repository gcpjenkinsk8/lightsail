name: NaveenbuildandZip

on:
  workflow_dispatch:

env:
  SOURCE_FOLDER: "C:/DeploymentFiles/VersionFolder"
  DESTINATION_FOLDER: "C:/DeploymentFiles/ReleaseFolder"

jobs:
  build-publish:
    runs-on: windows-latest  # Use the Windows runner
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/Main-Build/.nuget/packages

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: nuget-
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Clean NuGet packages
      run: nuget locals all -clear

    - name: Restore NuGet packages
      run: nuget restore Main-Build
      
    - name: Restore dependencies
      run: msbuild /restore Main-Build
      

    - name: Build Solution
      run: |
        msbuild.exe /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="Main-Build/_build" Main-Build
        
    - name: Set artifact name
      id: artifact-name
      run: echo "::set-output name=name::Build-$(date +%Y%m%d)"

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.artifact-name.outputs.name }}
        path: "Main-Build/_build"
  
  Copy-file-git-lighsail:
    name: Copy File
    needs: build-publish
    if: success()  
    runs-on: ubuntu-latest
    env:
      SERVER_PASS: ${{ secrets.REMOTE_PASSWORDGC }}
    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Create Folder abcd
      run: mkdir abcd

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ steps.artifact-name.outputs.name }}
        path: ./abcd



      # Zip the contents of the "abc" folder
    - name: Zip Artifact
      run: zip -r my-folder-artifact.zip abcd/*
    - name: cd files
      run: |
        ls
    - name: Install sshpass dependency for ssh access
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
    - name: Create ~/.ssh directory for storing known hosts
      run: mkdir -p ~/.ssh

    - name: Update known_hosts file with the server ip to avoid fingerprint ask
      run: |
        WINDOWS_SERVER_IP="${{ secrets.REMOTE_HOSTGC }}"
        echo "$WINDOWS_SERVER_IP $(ssh-keyscan -t rsa $WINDOWS_SERVER_IP 2>&1)" >> ~/.ssh/known_hosts
    - name: copy the latest files at C drive
      run: |
        sshpass -vvv -p "$SERVER_PASS" scp -o StrictHostKeyChecking=no "${{ github.workspace }}/my-folder-artifact.zip" "${{ secrets.REMOTE_ADMINGC }}"@"${{ secrets.REMOTE_HOSTGC }}":"${{ env.SOURCE_FOLDER }}"
 
